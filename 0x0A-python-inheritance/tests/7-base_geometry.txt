import the module containing the function to be tested

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

"""case 1:
	area function trying
"""
>>> obj = BaseGeometry()

>>> obj.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> obj.integer_validator("age", None)
Traceback (most recent call last):
TypeError: age must be an integer

>>> obj.integer_validator("age", 89)

>>> obj.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> obj.integer_validator("age", -89)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> obj.integer_validator("age", "hi")
Traceback (most recent call last):
TypeError: age must be an integer

>>> obj.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> obj.integer_validator("age", (9,))
Traceback (most recent call last):
TypeError: age must be an integer

>>> obj.integer_validator("age", [9])
Traceback (most recent call last):
TypeError: age must be an integer

>>> obj.integer_validator("age", True)
Traceback (most recent call last):
TypeError: age must be an integer

>>> obj.integer_validator("age", {7, 9})
Traceback (most recent call last):
TypeError: age must be an integer

>>> obj.integer_validator() #doctest: +ELLIPSIS
Traceback (most recent call last):
TypeError: ...

>>> obj.integer_validator("age") #doctest: +ELLIPSIS
Traceback (most recent call last):
TypeError: ...
